from django.db import models
from django.utils import timezone
import datetime

# Table names are automatically generated by combining the name of the app and the lowercase name of the model 
# Primary keys are added automatically
# foreign key field names have _id appended to the end

class Question(models.Model):
	question_text = models.CharField(max_length=200)
	pub_date = models.DateTimeField('date published') # optional human-readable name in quotes; any field can have this
	def __unicode__(self):
		return self.question_text

	def was_published_recently(self): # returns True if self.pub_date is less than one before now.
		return self.pub_date >= timezone.now() - datetime.timedelta(days=1)

		# the following customizes how this method is displayed on the admin page
	was_published_recently.admin_order_field = 'pub_date'
	was_published_recently.boolean = True
	was_published_recently.short_description = 'Published recently?'

	# FIXME these don't work as advertized (should add filter and search fields)
	list_filter = ['pub_date']
	search_fields = ['question_text']


class Choice(models.Model):
	question = models.ForeignKey(Question)
	choice_text = models.CharField(max_length=200)
	votes = models.IntegerField(default=0)
	def __unicode__(self):
		return self.choice_text
